name: Pull request

on:
  pull_request:
    branches:
      - main
env:
  TF_BACKEND_bucket: ${{ vars.PROJECT_ID }}-state
  #TF_VAR_whatever will be picked up as terraform variables.
  TF_VAR_org_id: ${{ secrets.ORG_ID }}
  TF_VAR_billing_account: ${{ secrets.BILLING_ACCOUNT }}
  TF_VAR_github_repo_owner_id: ${{ github.repository_owner_id }}
  TF_VAR_github_repo: ${{ github.repository }}
  TF_VAR_project_id: "nikhil-api-v2-dc52"
  TF_VAR_region: ${{ vars.REGION }}
  TF_VAR_container_tag: ${{ github.sha }}
  BUILD_TAG: ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}
  COMMIT_TAG: ${{ github.sha }}
jobs:
  build:
    # Any runner supporting Node 20 or newer
    name: Build and test
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.11"
    - name: Set up poetry
      run: uv pip install poetry --system
    - uses: "google-github-actions/auth@v2"
      with:
        project_id: ${{ vars.PROJECT_ID }}
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v2"
      with:
        version: ">= 363.0.0"
    - name: Build and test
      run: make build
  test_deploy:
    needs: [build]
    runs-on: ubuntu-latest
    name: Test deployment
    environment: beta
    env:
        TF_VAR_stage: beta
        TF_VAR_is_prod: false
    
    permissions:
      contents: "read"
      id-token: "write"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - uses: "google-github-actions/auth@v2"
      with:
        project_id: ${{ vars.PROJECT_ID }}
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v2"
      with:
        version: ">= 363.0.0"
    - name: Test images publish
      run: make -f Makefile.deploy deploy_beta TAG=${{ github.sha }} PROJECT_ID=${{ vars.PROJECT_ID }} LOG_DIR=gs://${{ vars.PROJECT_ID }}-buildlogs