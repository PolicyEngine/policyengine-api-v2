name: Pull request

on:
  pull_request:
    branches:
      - main

env:
  TF_BACKEND_bucket: ${{ vars.PROJECT_ID }}-state
  #TF_VAR_whatever will be picked up as terraform variables.
  TF_VAR_org_id: ${{ secrets.ORG_ID }}
  TF_VAR_billing_account: ${{ secrets.BILLING_ACCOUNT }}
  TF_VAR_github_repo_owner_id: ${{ github.repository_owner_id }}
  TF_VAR_github_repo: ${{ github.repository }}
  TF_VAR_project_id: ${{ vars.PROJECT_ID }}
  TF_VAR_region: ${{ vars.REGION }}
  TF_VAR_full_container_tag: ${{ github.sha }}
  TF_VAR_simulation_container_tag: ${{ github.sha }}
  BUILD_TAG: ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}
  COMMIT_TAG: ${{ github.sha }}
jobs:
  build:
    # Any runner supporting Node 20 or newer
    runs-on: ubuntu-latest
    environment: beta

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    steps:
    - name: checkout repo
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.11"
    - name: Set up poetry
      run: uv pip install poetry --system
    - name: Build application
      run: make build

  test_deploy:
    runs-on: ubuntu-latest
    name: Test deployment
    environment: beta
    env:
        TF_VAR_stage: beta
        TF_VAR_is_prod: false

    permissions:
      contents: "read"
      id-token: "write"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.11"
    - name: Set up poetry
      run: uv pip install poetry --system
    - uses: "google-github-actions/auth@v2"
      with:
        workload_identity_provider: "${{ vars._GITHUB_IDENTITY_POOL_PROVIDER_NAME }}"
        service_account: "deploy@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com"
    - uses: hashicorp/setup-terraform@v3
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v2"
      with:
        version: ">= 363.0.0"
    - name: Test deployment
      run: make -f Makefile.deploy plan-deploy TAG=${{ github.sha }} PROJECT_ID=${{ vars.PROJECT_ID }}
