name: Reusable deploy to gcp workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'The environment to deploy to (e.g., beta, prod)'

env:
  TF_BACKEND_bucket: ${{ vars.PROJECT_ID }}-state
  #TF_VAR_whatever will be picked up as terraform variables.
  TF_VAR_org_id: ${{ secrets.ORG_ID }}
  TF_VAR_billing_account: ${{ secrets.BILLING_ACCOUNT }}
  TF_VAR_github_repo_owner_id: ${{ github.repository_owner_id }}
  TF_VAR_github_repo: ${{ github.repository }}
  TF_VAR_project_id: ${{ vars.PROJECT_ID }}
  TF_VAR_region: ${{ vars.REGION }}
  TF_VAR_full_container_tag: ${{ github.sha }}
  TF_VAR_simulation_container_tag: ${{ github.sha }}
  TF_VAR_container_tag: ${{ github.sha }}
  BUILD_TAG: ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}
  COMMIT_TAG: ${{ github.sha }}
jobs:
  #api build steps are separated so they can run in parallel.
  build_simulation_api_image:
    # Any runner supporting Node 20 or newer
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      contents: "read"
      # Required to auth against gcp
      id-token: "write"

    steps:
    - name: checkout repo
      uses: actions/checkout@v4
    - uses: "google-github-actions/auth@v2"
      with:
        workload_identity_provider: "${{ vars._GITHUB_IDENTITY_POOL_PROVIDER_NAME }}"
        service_account: "builder@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com"
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v2"
      with:
        version: ">= 363.0.0"
    - name: Build application
      run: make -f Makefile.deploy publish-simulation-api-docker TAG=${{ github.sha }} PROJECT_ID=${{ vars.PROJECT_ID }} LOG_DIR=gs://${{ vars.PROJECT_ID }}-buildlogs

  build_full_api_image:
    # Any runner supporting Node 20 or newer
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      #required to auth against GCP
      id-token: "write"

    steps:
    - name: checkout repo
      uses: actions/checkout@v4
    - uses: "google-github-actions/auth@v2"
      with:
        workload_identity_provider: "${{ vars._GITHUB_IDENTITY_POOL_PROVIDER_NAME }}"
        service_account: "builder@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com"
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v2"
      with:
        version: ">= 363.0.0"
    - name: Build application
      run: make -f Makefile.deploy publish-full-api-docker TAG=${{ github.sha }} PROJECT_ID=${{ vars.PROJECT_ID }} LOG_DIR=gs://${{ vars.PROJECT_ID }}-buildlogs

  build_tagger_api_image:
    # Any runner supporting Node 20 or newer
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      #required to auth against GCP
      id-token: "write"

    steps:
    - name: checkout repo
      uses: actions/checkout@v4
    - uses: "google-github-actions/auth@v2"
      with:
        workload_identity_provider: "${{ vars._GITHUB_IDENTITY_POOL_PROVIDER_NAME }}"
        service_account: "builder@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com"
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v2"
      with:
        version: ">= 363.0.0"
    - name: Build application
      run: make -f Makefile.deploy publish-tagger-api-docker TAG=${{ github.sha }} PROJECT_ID=${{ vars.PROJECT_ID }} LOG_DIR=gs://${{ vars.PROJECT_ID }}-buildlogs
